[project]
name = "feedforward"
version = "0.1.0"
description = "AI-powered educational feedback platform"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "python-fasthtml",
    "passlib==1.7.4",
    "litellm>=1.12.0",
    "python-dotenv",
    "bcrypt==3.2.0",
    "email-validator",
    "python-multipart",
    "requests>=2.28.0",
    "cryptography>=41.0.0",
    "rich>=13.0.0",
    "markdown>=3.0.0",
    "markdown2>=2.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "types-requests",
    "types-passlib",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
# Same as Black.
line-length = 88

# Target Python 3.9+
target-version = "py39"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I", "N", "W", "UP", "B", "C4", "SIM", "RUF"]
ignore = [
    "E501",  # Line too long - handled by formatter
    "B008",  # Do not perform function calls in argument defaults - common in FastHTML
    "B006",  # Do not use mutable data structures for argument defaults - FastHTML pattern
    "F403",  # Star imports unable to detect undefined names - FastHTML pattern
    "E402",  # Module level import not at top - sometimes needed for FastHTML
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Ignore import violations in __init__.py files
"__init__.py" = ["E402", "F401"]
# FastHTML routes use star imports and may have multiple decorators
"app/routes/*.py" = ["F405", "F403", "F811"]
# Main app file often needs flexible imports
"app.py" = ["F405", "F403", "E402"]
# UI utilities use FastHTML components extensively
"app/utils/ui.py" = ["F405", "F403"]

[tool.ruff.lint.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false  # Changed to false for FastHTML
disallow_untyped_decorators = false
no_implicit_optional = false  # Changed to false for FastHTML patterns
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module options:
[[tool.mypy.overrides]]
module = [
    "litellm.*",
    "fasthtml.*",
    "python_fasthtml.*",
    "passlib.*",
    "email_validator.*",
    "starlette.*",
    "uvicorn.*",
    "httpx.*",
    "monsterui.*",
    "markdown.*",
    "dotenv.*",
    "rich.*",
]
ignore_missing_imports = true

# Ignore star imports and undefined names in FastHTML routes
[[tool.mypy.overrides]]
module = [
    "app.routes.*",
    "app.utils.ui",
    "app",
]
ignore_errors = true  # FastHTML uses dynamic imports that mypy can't understand

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers"
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]